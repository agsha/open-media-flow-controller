/*
 * THIS FILE WAS AUTOGENERATED BY make_exports.awk
 *
 * This is an ugly hack that needs to be here, so
 * that libtool will link all of the APR functions
 * into server regardless of whether the base server
 * uses them.
 */

#define CORE_PRIVATE

#include "ap_compat.h"
#include "ap_config_auto.h"
#include "ap_config.h"
#include "ap_config_layout.h"
#include "ap_listen.h"
#include "ap_mmn.h"
#include "ap_mpm.h"
#include "ap_provider.h"
#include "ap_regex.h"
#include "ap_regkey.h"
#include "ap_release.h"
#include "http_config.h"
#include "http_connection.h"
#include "http_core.h"
#include "httpd.h"
#include "http_log.h"
#include "http_main.h"
#include "http_protocol.h"
#include "http_request.h"
#include "http_vhost.h"
#include "mpm_common.h"
#include "scoreboard.h"
#include "util_cfgtree.h"
#include "util_charset.h"
#include "util_ebcdic.h"
#include "util_filter.h"
#include "util_ldap.h"
#include "util_md5.h"
#include "util_script.h"
#include "util_time.h"
#include "util_xml.h"
#include "mod_core.h"
#include "os.h"
#include "unixd.h"

const void *ap_ugly_hack = NULL;

/*
 * include/ap_listen.h
 */
const void *ap_hack_ap_listen_pre_config = (const void *)ap_listen_pre_config;
const void *ap_hack_ap_setup_listeners = (const void *)ap_setup_listeners;
const void *ap_hack_ap_close_listeners = (const void *)ap_close_listeners;
const void *ap_hack_ap_set_listenbacklog = (const void *)ap_set_listenbacklog;
const void *ap_hack_ap_set_listener = (const void *)ap_set_listener;
const void *ap_hack_ap_set_send_buffer_size = (const void *)ap_set_send_buffer_size;
const void *ap_hack_ap_set_receive_buffer_size = (const void *)ap_set_receive_buffer_size;

/*
 * include/ap_mpm.h
 */
const void *ap_hack_ap_mpm_run = (const void *)ap_mpm_run;
const void *ap_hack_ap_graceful_stop_signalled = (const void *)ap_graceful_stop_signalled;
const void *ap_hack_ap_os_create_privileged_process = (const void *)ap_os_create_privileged_process;
const void *ap_hack_ap_mpm_query = (const void *)ap_mpm_query;
#if AP_ENABLE_EXCEPTION_HOOK
const void *ap_hack_ap_hook_fatal_exception = (const void *)ap_hook_fatal_exception;
const void *ap_hack_ap_hook_get_fatal_exception = (const void *)ap_hook_get_fatal_exception;
const void *ap_hack_ap_run_fatal_exception = (const void *)ap_run_fatal_exception;
#endif /*AP_ENABLE_EXCEPTION_HOOK*/

/*
 * include/ap_provider.h
 */
const void *ap_hack_ap_register_provider = (const void *)ap_register_provider;
const void *ap_hack_ap_lookup_provider = (const void *)ap_lookup_provider;
const void *ap_hack_ap_list_provider_names = (const void *)ap_list_provider_names;

/*
 * include/ap_regex.h
 */
const void *ap_hack_ap_regcomp = (const void *)ap_regcomp;
const void *ap_hack_ap_regexec = (const void *)ap_regexec;
const void *ap_hack_ap_regerror = (const void *)ap_regerror;
const void *ap_hack_ap_regfree = (const void *)ap_regfree;

/*
 * include/ap_regkey.h
 */
#if defined(WIN32) || defined(DOXYGEN)
const void *ap_hack_ap_regkey_const = (const void *)ap_regkey_const;
const void *ap_hack_ap_regkey_open = (const void *)ap_regkey_open;
const void *ap_hack_ap_regkey_close = (const void *)ap_regkey_close;
const void *ap_hack_ap_regkey_remove = (const void *)ap_regkey_remove;
const void *ap_hack_ap_regkey_value_get = (const void *)ap_regkey_value_get;
const void *ap_hack_ap_regkey_value_set = (const void *)ap_regkey_value_set;
const void *ap_hack_ap_regkey_value_raw_get = (const void *)ap_regkey_value_raw_get;
const void *ap_hack_ap_regkey_value_raw_set = (const void *)ap_regkey_value_raw_set;
const void *ap_hack_ap_regkey_value_array_get = (const void *)ap_regkey_value_array_get;
const void *ap_hack_ap_regkey_value_array_set = (const void *)ap_regkey_value_array_set;
const void *ap_hack_ap_regkey_value_remove = (const void *)ap_regkey_value_remove;
#endif /* def WIN32 || def DOXYGEN */

/*
 * include/http_config.h
 */
const void *ap_hack_ap_get_module_config = (const void *)ap_get_module_config;
const void *ap_hack_ap_set_module_config = (const void *)ap_set_module_config;
const void *ap_hack_ap_set_string_slot = (const void *)ap_set_string_slot;
const void *ap_hack_ap_set_int_slot = (const void *)ap_set_int_slot;
const void *ap_hack_ap_method_is_limited = (const void *)ap_method_is_limited;
const void *ap_hack_ap_set_string_slot_lower = (const void *)ap_set_string_slot_lower;
const void *ap_hack_ap_set_flag_slot = (const void *)ap_set_flag_slot;
const void *ap_hack_ap_set_file_slot = (const void *)ap_set_file_slot;
const void *ap_hack_ap_set_deprecated = (const void *)ap_set_deprecated;
const void *ap_hack_ap_server_root_relative = (const void *)ap_server_root_relative;
const void *ap_hack_ap_add_module = (const void *)ap_add_module;
const void *ap_hack_ap_remove_module = (const void *)ap_remove_module;
const void *ap_hack_ap_add_loaded_module = (const void *)ap_add_loaded_module;
const void *ap_hack_ap_remove_loaded_module = (const void *)ap_remove_loaded_module;
const void *ap_hack_ap_find_module_name = (const void *)ap_find_module_name;
const void *ap_hack_ap_find_linked_module = (const void *)ap_find_linked_module;
const void *ap_hack_ap_pcfg_openfile = (const void *)ap_pcfg_openfile;
const void *ap_hack_ap_pcfg_open_custom = (const void *)ap_pcfg_open_custom;
const void *ap_hack_ap_cfg_getline = (const void *)ap_cfg_getline;
const void *ap_hack_ap_cfg_getc = (const void *)ap_cfg_getc;
const void *ap_hack_ap_cfg_closefile = (const void *)ap_cfg_closefile;
const void *ap_hack_ap_soak_end_container = (const void *)ap_soak_end_container;
const void *ap_hack_ap_build_cont_config = (const void *)ap_build_cont_config;
const void *ap_hack_ap_build_config = (const void *)ap_build_config;
const void *ap_hack_ap_walk_config = (const void *)ap_walk_config;
const void *ap_hack_ap_check_cmd_context = (const void *)ap_check_cmd_context;
#ifdef CORE_PRIVATE
const void *ap_hack_ap_single_module_configure = (const void *)ap_single_module_configure;
const void *ap_hack_ap_setup_prelinked_modules = (const void *)ap_setup_prelinked_modules;
const void *ap_hack_ap_show_directives = (const void *)ap_show_directives;
const void *ap_hack_ap_show_modules = (const void *)ap_show_modules;
const void *ap_hack_ap_show_mpm = (const void *)ap_show_mpm;
const void *ap_hack_ap_read_config = (const void *)ap_read_config;
const void *ap_hack_ap_run_rewrite_args = (const void *)ap_run_rewrite_args;
const void *ap_hack_ap_register_hooks = (const void *)ap_register_hooks;
const void *ap_hack_ap_fixup_virtual_hosts = (const void *)ap_fixup_virtual_hosts;
const void *ap_hack_ap_create_request_config = (const void *)ap_create_request_config;
const void *ap_hack_ap_create_per_dir_config = (const void *)ap_create_per_dir_config;
const void *ap_hack_ap_merge_per_dir_configs = (const void *)ap_merge_per_dir_configs;
const void *ap_hack_ap_create_conn_config = (const void *)ap_create_conn_config;
const void *ap_hack_ap_parse_htaccess = (const void *)ap_parse_htaccess;
const void *ap_hack_ap_init_virtual_host = (const void *)ap_init_virtual_host;
const void *ap_hack_ap_process_resource_config = (const void *)ap_process_resource_config;
const void *ap_hack_ap_process_config_tree = (const void *)ap_process_config_tree;
const void *ap_hack_ap_invoke_handler = (const void *)ap_invoke_handler;
const void *ap_hack_ap_find_command = (const void *)ap_find_command;
const void *ap_hack_ap_find_command_in_modules = (const void *)ap_find_command_in_modules;
const void *ap_hack_ap_set_config_vectors = (const void *)ap_set_config_vectors;
#endif
const void *ap_hack_ap_hook_header_parser = (const void *)ap_hook_header_parser;
const void *ap_hack_ap_hook_get_header_parser = (const void *)ap_hook_get_header_parser;
const void *ap_hack_ap_run_header_parser = (const void *)ap_run_header_parser;
const void *ap_hack_ap_hook_pre_config = (const void *)ap_hook_pre_config;
const void *ap_hack_ap_hook_get_pre_config = (const void *)ap_hook_get_pre_config;
const void *ap_hack_ap_run_pre_config = (const void *)ap_run_pre_config;
const void *ap_hack_ap_hook_test_config = (const void *)ap_hook_test_config;
const void *ap_hack_ap_hook_get_test_config = (const void *)ap_hook_get_test_config;
const void *ap_hack_ap_run_test_config = (const void *)ap_run_test_config;
const void *ap_hack_ap_hook_post_config = (const void *)ap_hook_post_config;
const void *ap_hack_ap_hook_get_post_config = (const void *)ap_hook_get_post_config;
const void *ap_hack_ap_run_post_config = (const void *)ap_run_post_config;
const void *ap_hack_ap_hook_open_logs = (const void *)ap_hook_open_logs;
const void *ap_hack_ap_hook_get_open_logs = (const void *)ap_hook_get_open_logs;
const void *ap_hack_ap_run_open_logs = (const void *)ap_run_open_logs;
const void *ap_hack_ap_hook_child_init = (const void *)ap_hook_child_init;
const void *ap_hack_ap_hook_get_child_init = (const void *)ap_hook_get_child_init;
const void *ap_hack_ap_run_child_init = (const void *)ap_run_child_init;
const void *ap_hack_ap_hook_handler = (const void *)ap_hook_handler;
const void *ap_hack_ap_hook_get_handler = (const void *)ap_hook_get_handler;
const void *ap_hack_ap_run_handler = (const void *)ap_run_handler;
const void *ap_hack_ap_hook_quick_handler = (const void *)ap_hook_quick_handler;
const void *ap_hack_ap_hook_get_quick_handler = (const void *)ap_hook_get_quick_handler;
const void *ap_hack_ap_run_quick_handler = (const void *)ap_run_quick_handler;
const void *ap_hack_ap_hook_optional_fn_retrieve = (const void *)ap_hook_optional_fn_retrieve;
const void *ap_hack_ap_hook_get_optional_fn_retrieve = (const void *)ap_hook_get_optional_fn_retrieve;
const void *ap_hack_ap_run_optional_fn_retrieve = (const void *)ap_run_optional_fn_retrieve;

/*
 * include/http_connection.h
 */
#ifdef CORE_PRIVATE
const void *ap_hack_ap_process_connection = (const void *)ap_process_connection;
const void *ap_hack_ap_flush_conn = (const void *)ap_flush_conn;
const void *ap_hack_ap_lingering_close = (const void *)ap_lingering_close;
#endif
const void *ap_hack_ap_hook_create_connection = (const void *)ap_hook_create_connection;
const void *ap_hack_ap_hook_get_create_connection = (const void *)ap_hook_get_create_connection;
const void *ap_hack_ap_run_create_connection = (const void *)ap_run_create_connection;
const void *ap_hack_ap_hook_pre_connection = (const void *)ap_hook_pre_connection;
const void *ap_hack_ap_hook_get_pre_connection = (const void *)ap_hook_get_pre_connection;
const void *ap_hack_ap_run_pre_connection = (const void *)ap_run_pre_connection;
const void *ap_hack_ap_hook_process_connection = (const void *)ap_hook_process_connection;
const void *ap_hack_ap_hook_get_process_connection = (const void *)ap_hook_get_process_connection;
const void *ap_hack_ap_run_process_connection = (const void *)ap_run_process_connection;
const void *ap_hack_ap_bucket_eoc_make = (const void *)ap_bucket_eoc_make;
const void *ap_hack_ap_bucket_eoc_create = (const void *)ap_bucket_eoc_create;

/*
 * include/http_core.h
 */
const void *ap_hack_ap_allow_options = (const void *)ap_allow_options;
const void *ap_hack_ap_allow_overrides = (const void *)ap_allow_overrides;
const void *ap_hack_ap_default_type = (const void *)ap_default_type;
const void *ap_hack_ap_document_root = (const void *)ap_document_root;
const void *ap_hack_ap_get_remote_host = (const void *)ap_get_remote_host;
const void *ap_hack_ap_get_remote_logname = (const void *)ap_get_remote_logname;
const void *ap_hack_ap_construct_url = (const void *)ap_construct_url;
const void *ap_hack_ap_get_server_name = (const void *)ap_get_server_name;
const void *ap_hack_ap_get_server_port = (const void *)ap_get_server_port;
const void *ap_hack_ap_get_limit_req_body = (const void *)ap_get_limit_req_body;
const void *ap_hack_ap_get_limit_xml_body = (const void *)ap_get_limit_xml_body;
const void *ap_hack_ap_custom_response = (const void *)ap_custom_response;
const void *ap_hack_ap_is_recursion_limit_exceeded = (const void *)ap_is_recursion_limit_exceeded;
const void *ap_hack_ap_exists_config_define = (const void *)ap_exists_config_define;
const void *ap_hack_ap_core_translate = (const void *)ap_core_translate;
const void *ap_hack_ap_auth_type = (const void *)ap_auth_type;
const void *ap_hack_ap_auth_name = (const void *)ap_auth_name;
const void *ap_hack_ap_satisfies = (const void *)ap_satisfies;
const void *ap_hack_ap_requires = (const void *)ap_requires;
#ifdef CORE_PRIVATE
const void *ap_hack_ap_register_request_note = (const void *)ap_register_request_note;
const void *ap_hack_ap_get_request_note = (const void *)ap_get_request_note;
const void *ap_hack_ap_add_per_dir_conf = (const void *)ap_add_per_dir_conf;
const void *ap_hack_ap_add_per_url_conf = (const void *)ap_add_per_url_conf;
const void *ap_hack_ap_add_file_conf = (const void *)ap_add_file_conf;
const void *ap_hack_ap_limit_section = (const void *)ap_limit_section;
#endif /* CORE_PRIVATE */
const void *ap_hack_ap_get_server_protocol = (const void *)ap_get_server_protocol;
const void *ap_hack_ap_set_server_protocol = (const void *)ap_set_server_protocol;
const void *ap_hack_ap_hook_get_mgmt_items = (const void *)ap_hook_get_mgmt_items;
const void *ap_hack_ap_hook_get_get_mgmt_items = (const void *)ap_hook_get_get_mgmt_items;
const void *ap_hack_ap_run_get_mgmt_items = (const void *)ap_run_get_mgmt_items;

/*
 * include/httpd.h
 */
const void *ap_hack_ap_get_server_revision = (const void *)ap_get_server_revision;
const void *ap_hack_ap_get_server_version = (const void *)ap_get_server_version;
const void *ap_hack_ap_get_server_banner = (const void *)ap_get_server_banner;
const void *ap_hack_ap_get_server_description = (const void *)ap_get_server_description;
const void *ap_hack_ap_add_version_component = (const void *)ap_add_version_component;
const void *ap_hack_ap_get_server_built = (const void *)ap_get_server_built;
const void *ap_hack_ap_field_noparam = (const void *)ap_field_noparam;
const void *ap_hack_ap_ht_time = (const void *)ap_ht_time;
const void *ap_hack_ap_getword = (const void *)ap_getword;
const void *ap_hack_ap_getword_nc = (const void *)ap_getword_nc;
const void *ap_hack_ap_getword_white = (const void *)ap_getword_white;
const void *ap_hack_ap_getword_white_nc = (const void *)ap_getword_white_nc;
const void *ap_hack_ap_getword_nulls = (const void *)ap_getword_nulls;
const void *ap_hack_ap_getword_nulls_nc = (const void *)ap_getword_nulls_nc;
const void *ap_hack_ap_getword_conf = (const void *)ap_getword_conf;
const void *ap_hack_ap_getword_conf_nc = (const void *)ap_getword_conf_nc;
const void *ap_hack_ap_resolve_env = (const void *)ap_resolve_env;
const void *ap_hack_ap_size_list_item = (const void *)ap_size_list_item;
const void *ap_hack_ap_get_list_item = (const void *)ap_get_list_item;
const void *ap_hack_ap_find_list_item = (const void *)ap_find_list_item;
const void *ap_hack_ap_get_token = (const void *)ap_get_token;
const void *ap_hack_ap_find_token = (const void *)ap_find_token;
const void *ap_hack_ap_find_last_token = (const void *)ap_find_last_token;
const void *ap_hack_ap_is_url = (const void *)ap_is_url;
const void *ap_hack_ap_unescape_url = (const void *)ap_unescape_url;
const void *ap_hack_ap_unescape_url_keep2f = (const void *)ap_unescape_url_keep2f;
const void *ap_hack_ap_no2slash = (const void *)ap_no2slash;
const void *ap_hack_ap_getparents = (const void *)ap_getparents;
const void *ap_hack_ap_escape_path_segment = (const void *)ap_escape_path_segment;
const void *ap_hack_ap_os_escape_path = (const void *)ap_os_escape_path;
const void *ap_hack_ap_escape_html = (const void *)ap_escape_html;
const void *ap_hack_ap_escape_html2 = (const void *)ap_escape_html2;
const void *ap_hack_ap_escape_logitem = (const void *)ap_escape_logitem;
const void *ap_hack_ap_escape_errorlog_item = (const void *)ap_escape_errorlog_item;
const void *ap_hack_ap_construct_server = (const void *)ap_construct_server;
const void *ap_hack_ap_escape_shell_cmd = (const void *)ap_escape_shell_cmd;
const void *ap_hack_ap_count_dirs = (const void *)ap_count_dirs;
const void *ap_hack_ap_make_dirstr_prefix = (const void *)ap_make_dirstr_prefix;
const void *ap_hack_ap_make_dirstr_parent = (const void *)ap_make_dirstr_parent;
const void *ap_hack_ap_make_full_path = (const void *)ap_make_full_path;
const void *ap_hack_ap_os_is_path_absolute = (const void *)ap_os_is_path_absolute;
const void *ap_hack_ap_is_matchexp = (const void *)ap_is_matchexp;
const void *ap_hack_ap_strcmp_match = (const void *)ap_strcmp_match;
const void *ap_hack_ap_strcasecmp_match = (const void *)ap_strcasecmp_match;
const void *ap_hack_ap_strcasestr = (const void *)ap_strcasestr;
const void *ap_hack_ap_stripprefix = (const void *)ap_stripprefix;
const void *ap_hack_ap_pbase64decode = (const void *)ap_pbase64decode;
const void *ap_hack_ap_pbase64encode = (const void *)ap_pbase64encode;
const void *ap_hack_ap_pregcomp = (const void *)ap_pregcomp;
const void *ap_hack_ap_pregfree = (const void *)ap_pregfree;
const void *ap_hack_ap_pregsub = (const void *)ap_pregsub;
const void *ap_hack_ap_content_type_tolower = (const void *)ap_content_type_tolower;
const void *ap_hack_ap_str_tolower = (const void *)ap_str_tolower;
const void *ap_hack_ap_ind = (const void *)ap_ind;
const void *ap_hack_ap_rind = (const void *)ap_rind;
const void *ap_hack_ap_escape_quotes = (const void *)ap_escape_quotes;
const void *ap_hack_ap_append_pid = (const void *)ap_append_pid;
const void *ap_hack_ap_timeout_parameter_parse = (const void *)ap_timeout_parameter_parse;
const void *ap_hack_ap_is_rdirectory = (const void *)ap_is_rdirectory;
const void *ap_hack_ap_is_directory = (const void *)ap_is_directory;
const void *ap_hack_ap_log_assert = (const void *)ap_log_assert;
const void *ap_hack_ap_psignature = (const void *)ap_psignature;
const void *ap_hack_ap_strchr = (const void *)ap_strchr;
const void *ap_hack_ap_strchr_c = (const void *)ap_strchr_c;
const void *ap_hack_ap_strrchr = (const void *)ap_strrchr;
const void *ap_hack_ap_strrchr_c = (const void *)ap_strrchr_c;
const void *ap_hack_ap_strstr = (const void *)ap_strstr;
const void *ap_hack_ap_strstr_c = (const void *)ap_strstr_c;

/*
 * include/http_log.h
 */
const void *ap_hack_ap_open_stderr_log = (const void *)ap_open_stderr_log;
const void *ap_hack_ap_replace_stderr_log = (const void *)ap_replace_stderr_log;
const void *ap_hack_ap_log_error = (const void *)ap_log_error;
const void *ap_hack_ap_log_perror = (const void *)ap_log_perror;
const void *ap_hack_ap_log_rerror = (const void *)ap_log_rerror;
const void *ap_hack_ap_log_cerror = (const void *)ap_log_cerror;
const void *ap_hack_ap_error_log2stderr = (const void *)ap_error_log2stderr;
const void *ap_hack_ap_log_pid = (const void *)ap_log_pid;
const void *ap_hack_ap_read_pid = (const void *)ap_read_pid;
const void *ap_hack_ap_open_piped_log = (const void *)ap_open_piped_log;
const void *ap_hack_ap_open_piped_log_ex = (const void *)ap_open_piped_log_ex;
const void *ap_hack_ap_close_piped_log = (const void *)ap_close_piped_log;
const void *ap_hack_ap_hook_error_log = (const void *)ap_hook_error_log;
const void *ap_hack_ap_hook_get_error_log = (const void *)ap_hook_get_error_log;
const void *ap_hack_ap_run_error_log = (const void *)ap_run_error_log;

/*
 * include/http_protocol.h
 */
const void *ap_hack_ap_hook_insert_error_filter = (const void *)ap_hook_insert_error_filter;
const void *ap_hack_ap_hook_get_insert_error_filter = (const void *)ap_hook_get_insert_error_filter;
const void *ap_hack_ap_run_insert_error_filter = (const void *)ap_run_insert_error_filter;
const void *ap_hack_ap_get_mime_headers = (const void *)ap_get_mime_headers;
const void *ap_hack_ap_get_mime_headers_core = (const void *)ap_get_mime_headers_core;
const void *ap_hack_ap_finalize_request_protocol = (const void *)ap_finalize_request_protocol;
const void *ap_hack_ap_send_error_response = (const void *)ap_send_error_response;
const void *ap_hack_ap_set_content_length = (const void *)ap_set_content_length;
const void *ap_hack_ap_set_keepalive = (const void *)ap_set_keepalive;
const void *ap_hack_ap_rationalize_mtime = (const void *)ap_rationalize_mtime;
const void *ap_hack_ap_make_content_type = (const void *)ap_make_content_type;
#ifdef CORE_PRIVATE
const void *ap_hack_ap_setup_make_content_type = (const void *)ap_setup_make_content_type;
#endif /* CORE_PRIVATE */
const void *ap_hack_ap_make_etag = (const void *)ap_make_etag;
const void *ap_hack_ap_set_etag = (const void *)ap_set_etag;
const void *ap_hack_ap_set_last_modified = (const void *)ap_set_last_modified;
const void *ap_hack_ap_meets_conditions = (const void *)ap_meets_conditions;
const void *ap_hack_ap_send_fd = (const void *)ap_send_fd;
#if APR_HAS_MMAP
const void *ap_hack_ap_send_mmap = (const void *)ap_send_mmap;
#endif
const void *ap_hack_ap_method_register = (const void *)ap_method_register;
const void *ap_hack_ap_method_registry_init = (const void *)ap_method_registry_init;
const void *ap_hack_ap_make_method_list = (const void *)ap_make_method_list;
const void *ap_hack_ap_copy_method_list = (const void *)ap_copy_method_list;
const void *ap_hack_ap_method_in_list = (const void *)ap_method_in_list;
const void *ap_hack_ap_method_list_add = (const void *)ap_method_list_add;
const void *ap_hack_ap_method_list_remove = (const void *)ap_method_list_remove;
const void *ap_hack_ap_clear_method_list = (const void *)ap_clear_method_list;
const void *ap_hack_ap_set_content_type = (const void *)ap_set_content_type;
const void *ap_hack_ap_rputc = (const void *)ap_rputc;
const void *ap_hack_ap_rputs = (const void *)ap_rputs;
const void *ap_hack_ap_rwrite = (const void *)ap_rwrite;
const void *ap_hack_ap_rvputs = (const void *)ap_rvputs;
const void *ap_hack_ap_vrprintf = (const void *)ap_vrprintf;
const void *ap_hack_ap_rprintf = (const void *)ap_rprintf;
const void *ap_hack_ap_rflush = (const void *)ap_rflush;
const void *ap_hack_ap_index_of_response = (const void *)ap_index_of_response;
const void *ap_hack_ap_get_status_line = (const void *)ap_get_status_line;
const void *ap_hack_ap_setup_client_block = (const void *)ap_setup_client_block;
const void *ap_hack_ap_should_client_block = (const void *)ap_should_client_block;
const void *ap_hack_ap_get_client_block = (const void *)ap_get_client_block;
const void *ap_hack_ap_discard_request_body = (const void *)ap_discard_request_body;
const void *ap_hack_ap_note_auth_failure = (const void *)ap_note_auth_failure;
const void *ap_hack_ap_note_basic_auth_failure = (const void *)ap_note_basic_auth_failure;
const void *ap_hack_ap_note_digest_auth_failure = (const void *)ap_note_digest_auth_failure;
const void *ap_hack_ap_get_basic_auth_pw = (const void *)ap_get_basic_auth_pw;
const void *ap_hack_ap_parse_uri = (const void *)ap_parse_uri;
const void *ap_hack_ap_getline = (const void *)ap_getline;
#if APR_CHARSET_EBCDIC
const void *ap_hack_ap_rgetline = (const void *)ap_rgetline;
#else /* ASCII box */
#endif
const void *ap_hack_ap_rgetline_core = (const void *)ap_rgetline_core;
const void *ap_hack_ap_method_number_of = (const void *)ap_method_number_of;
const void *ap_hack_ap_method_name_of = (const void *)ap_method_name_of;
const void *ap_hack_ap_hook_post_read_request = (const void *)ap_hook_post_read_request;
const void *ap_hack_ap_hook_get_post_read_request = (const void *)ap_hook_get_post_read_request;
const void *ap_hack_ap_run_post_read_request = (const void *)ap_run_post_read_request;
const void *ap_hack_ap_hook_log_transaction = (const void *)ap_hook_log_transaction;
const void *ap_hack_ap_hook_get_log_transaction = (const void *)ap_hook_get_log_transaction;
const void *ap_hack_ap_run_log_transaction = (const void *)ap_run_log_transaction;
const void *ap_hack_ap_hook_http_scheme = (const void *)ap_hook_http_scheme;
const void *ap_hack_ap_hook_get_http_scheme = (const void *)ap_hook_get_http_scheme;
const void *ap_hack_ap_run_http_scheme = (const void *)ap_run_http_scheme;
const void *ap_hack_ap_hook_default_port = (const void *)ap_hook_default_port;
const void *ap_hack_ap_hook_get_default_port = (const void *)ap_hook_get_default_port;
const void *ap_hack_ap_run_default_port = (const void *)ap_run_default_port;
const void *ap_hack_ap_bucket_error_make = (const void *)ap_bucket_error_make;
const void *ap_hack_ap_bucket_error_create = (const void *)ap_bucket_error_create;
const void *ap_hack_ap_byterange_filter = (const void *)ap_byterange_filter;
const void *ap_hack_ap_http_header_filter = (const void *)ap_http_header_filter;
const void *ap_hack_ap_content_length_filter = (const void *)ap_content_length_filter;
const void *ap_hack_ap_old_write_filter = (const void *)ap_old_write_filter;
const void *ap_hack_ap_set_sub_req_protocol = (const void *)ap_set_sub_req_protocol;
const void *ap_hack_ap_finalize_sub_req_protocol = (const void *)ap_finalize_sub_req_protocol;
const void *ap_hack_ap_send_interim_response = (const void *)ap_send_interim_response;

/*
 * include/http_request.h
 */
const void *ap_hack_ap_process_request_internal = (const void *)ap_process_request_internal;
const void *ap_hack_ap_sub_req_lookup_uri = (const void *)ap_sub_req_lookup_uri;
const void *ap_hack_ap_sub_req_lookup_file = (const void *)ap_sub_req_lookup_file;
const void *ap_hack_ap_sub_req_lookup_dirent = (const void *)ap_sub_req_lookup_dirent;
const void *ap_hack_ap_sub_req_method_uri = (const void *)ap_sub_req_method_uri;
const void *ap_hack_ap_sub_req_output_filter = (const void *)ap_sub_req_output_filter;
const void *ap_hack_ap_run_sub_req = (const void *)ap_run_sub_req;
const void *ap_hack_ap_destroy_sub_req = (const void *)ap_destroy_sub_req;
const void *ap_hack_ap_internal_redirect = (const void *)ap_internal_redirect;
const void *ap_hack_ap_internal_redirect_handler = (const void *)ap_internal_redirect_handler;
const void *ap_hack_ap_internal_fast_redirect = (const void *)ap_internal_fast_redirect;
const void *ap_hack_ap_some_auth_required = (const void *)ap_some_auth_required;
const void *ap_hack_ap_is_initial_req = (const void *)ap_is_initial_req;
const void *ap_hack_ap_update_mtime = (const void *)ap_update_mtime;
const void *ap_hack_ap_allow_methods = (const void *)ap_allow_methods;
const void *ap_hack_ap_allow_standard_methods = (const void *)ap_allow_standard_methods;
#ifdef CORE_PRIVATE
const void *ap_hack_ap_die = (const void *)ap_die;
#endif
const void *ap_hack_ap_hook_create_request = (const void *)ap_hook_create_request;
const void *ap_hack_ap_hook_get_create_request = (const void *)ap_hook_get_create_request;
const void *ap_hack_ap_run_create_request = (const void *)ap_run_create_request;
const void *ap_hack_ap_hook_translate_name = (const void *)ap_hook_translate_name;
const void *ap_hack_ap_hook_get_translate_name = (const void *)ap_hook_get_translate_name;
const void *ap_hack_ap_run_translate_name = (const void *)ap_run_translate_name;
const void *ap_hack_ap_hook_map_to_storage = (const void *)ap_hook_map_to_storage;
const void *ap_hack_ap_hook_get_map_to_storage = (const void *)ap_hook_get_map_to_storage;
const void *ap_hack_ap_run_map_to_storage = (const void *)ap_run_map_to_storage;
const void *ap_hack_ap_hook_check_user_id = (const void *)ap_hook_check_user_id;
const void *ap_hack_ap_hook_get_check_user_id = (const void *)ap_hook_get_check_user_id;
const void *ap_hack_ap_run_check_user_id = (const void *)ap_run_check_user_id;
const void *ap_hack_ap_hook_fixups = (const void *)ap_hook_fixups;
const void *ap_hack_ap_hook_get_fixups = (const void *)ap_hook_get_fixups;
const void *ap_hack_ap_run_fixups = (const void *)ap_run_fixups;
const void *ap_hack_ap_hook_type_checker = (const void *)ap_hook_type_checker;
const void *ap_hack_ap_hook_get_type_checker = (const void *)ap_hook_get_type_checker;
const void *ap_hack_ap_run_type_checker = (const void *)ap_run_type_checker;
const void *ap_hack_ap_hook_access_checker = (const void *)ap_hook_access_checker;
const void *ap_hack_ap_hook_get_access_checker = (const void *)ap_hook_get_access_checker;
const void *ap_hack_ap_run_access_checker = (const void *)ap_run_access_checker;
const void *ap_hack_ap_hook_auth_checker = (const void *)ap_hook_auth_checker;
const void *ap_hack_ap_hook_get_auth_checker = (const void *)ap_hook_get_auth_checker;
const void *ap_hack_ap_run_auth_checker = (const void *)ap_run_auth_checker;
const void *ap_hack_ap_hook_insert_filter = (const void *)ap_hook_insert_filter;
const void *ap_hack_ap_hook_get_insert_filter = (const void *)ap_hook_get_insert_filter;
const void *ap_hack_ap_run_insert_filter = (const void *)ap_run_insert_filter;
const void *ap_hack_ap_location_walk = (const void *)ap_location_walk;
const void *ap_hack_ap_directory_walk = (const void *)ap_directory_walk;
const void *ap_hack_ap_file_walk = (const void *)ap_file_walk;

/*
 * include/http_vhost.h
 */
const void *ap_hack_ap_init_vhost_config = (const void *)ap_init_vhost_config;
const void *ap_hack_ap_fini_vhost_config = (const void *)ap_fini_vhost_config;
const void *ap_hack_ap_vhost_iterate_given_conn = (const void *)ap_vhost_iterate_given_conn;
const void *ap_hack_ap_update_vhost_given_ip = (const void *)ap_update_vhost_given_ip;
const void *ap_hack_ap_update_vhost_from_headers = (const void *)ap_update_vhost_from_headers;
const void *ap_hack_ap_matches_request_vhost = (const void *)ap_matches_request_vhost;

/*
 * include/mpm_common.h
 */
#ifdef HAVE_GETPWNAM
const void *ap_hack_ap_uname2id = (const void *)ap_uname2id;
#endif
#ifdef HAVE_GETGRNAM
const void *ap_hack_ap_gname2id = (const void *)ap_gname2id;
#endif
#ifdef AP_MPM_USES_POD
const void *ap_hack_ap_mpm_pod_open = (const void *)ap_mpm_pod_open;
const void *ap_hack_ap_mpm_pod_check = (const void *)ap_mpm_pod_check;
const void *ap_hack_ap_mpm_pod_close = (const void *)ap_mpm_pod_close;
const void *ap_hack_ap_mpm_pod_signal = (const void *)ap_mpm_pod_signal;
const void *ap_hack_ap_mpm_pod_killpg = (const void *)ap_mpm_pod_killpg;
#endif
const void *ap_hack_ap_hook_monitor = (const void *)ap_hook_monitor;
const void *ap_hack_ap_hook_get_monitor = (const void *)ap_hook_get_monitor;
const void *ap_hack_ap_run_monitor = (const void *)ap_run_monitor;

/*
 * include/scoreboard.h
 */
const void *ap_hack_ap_exists_scoreboard_image = (const void *)ap_exists_scoreboard_image;
const void *ap_hack_ap_increment_counts = (const void *)ap_increment_counts;
const void *ap_hack_ap_calc_scoreboard_size = (const void *)ap_calc_scoreboard_size;
const void *ap_hack_ap_create_sb_handle = (const void *)ap_create_sb_handle;
const void *ap_hack_ap_update_child_status = (const void *)ap_update_child_status;
const void *ap_hack_ap_update_child_status_from_indexes = (const void *)ap_update_child_status_from_indexes;
const void *ap_hack_ap_get_scoreboard_worker = (const void *)ap_get_scoreboard_worker;
const void *ap_hack_ap_get_scoreboard_process = (const void *)ap_get_scoreboard_process;
const void *ap_hack_ap_get_scoreboard_global = (const void *)ap_get_scoreboard_global;
const void *ap_hack_ap_get_scoreboard_lb = (const void *)ap_get_scoreboard_lb;
const void *ap_hack_ap_hook_pre_mpm = (const void *)ap_hook_pre_mpm;
const void *ap_hack_ap_hook_get_pre_mpm = (const void *)ap_hook_get_pre_mpm;
const void *ap_hack_ap_run_pre_mpm = (const void *)ap_run_pre_mpm;

/*
 * include/util_filter.h
 */
const void *ap_hack_ap_get_brigade = (const void *)ap_get_brigade;
const void *ap_hack_ap_pass_brigade = (const void *)ap_pass_brigade;
const void *ap_hack_ap_register_input_filter = (const void *)ap_register_input_filter;
const void *ap_hack_ap_register_output_filter = (const void *)ap_register_output_filter;
const void *ap_hack_ap_register_output_filter_protocol = (const void *)ap_register_output_filter_protocol;
const void *ap_hack_ap_add_input_filter = (const void *)ap_add_input_filter;
const void *ap_hack_ap_add_input_filter_handle = (const void *)ap_add_input_filter_handle;
const void *ap_hack_ap_get_input_filter_handle = (const void *)ap_get_input_filter_handle;
const void *ap_hack_ap_add_output_filter = (const void *)ap_add_output_filter;
const void *ap_hack_ap_add_output_filter_handle = (const void *)ap_add_output_filter_handle;
const void *ap_hack_ap_get_output_filter_handle = (const void *)ap_get_output_filter_handle;
const void *ap_hack_ap_remove_input_filter = (const void *)ap_remove_input_filter;
const void *ap_hack_ap_remove_output_filter = (const void *)ap_remove_output_filter;
const void *ap_hack_ap_save_brigade = (const void *)ap_save_brigade;
const void *ap_hack_ap_filter_flush = (const void *)ap_filter_flush;
const void *ap_hack_ap_fflush = (const void *)ap_fflush;
const void *ap_hack_ap_fputstrs = (const void *)ap_fputstrs;
const void *ap_hack_ap_fprintf = (const void *)ap_fprintf;
const void *ap_hack_ap_filter_protocol = (const void *)ap_filter_protocol;

/*
 * include/util_md5.h
 */
const void *ap_hack_ap_md5 = (const void *)ap_md5;
const void *ap_hack_ap_md5_binary = (const void *)ap_md5_binary;
const void *ap_hack_ap_md5contextTo64 = (const void *)ap_md5contextTo64;
const void *ap_hack_ap_md5digest = (const void *)ap_md5digest;

/*
 * include/util_script.h
 */
const void *ap_hack_ap_create_environment = (const void *)ap_create_environment;
const void *ap_hack_ap_find_path_info = (const void *)ap_find_path_info;
const void *ap_hack_ap_add_cgi_vars = (const void *)ap_add_cgi_vars;
const void *ap_hack_ap_add_common_vars = (const void *)ap_add_common_vars;
const void *ap_hack_ap_scan_script_header_err = (const void *)ap_scan_script_header_err;
const void *ap_hack_ap_scan_script_header_err_brigade = (const void *)ap_scan_script_header_err_brigade;
const void *ap_hack_ap_scan_script_header_err_strs = (const void *)ap_scan_script_header_err_strs;
const void *ap_hack_ap_scan_script_header_err_core = (const void *)ap_scan_script_header_err_core;

/*
 * include/util_time.h
 */
const void *ap_hack_ap_explode_recent_localtime = (const void *)ap_explode_recent_localtime;
const void *ap_hack_ap_explode_recent_gmt = (const void *)ap_explode_recent_gmt;
const void *ap_hack_ap_recent_ctime = (const void *)ap_recent_ctime;
const void *ap_hack_ap_recent_rfc822_date = (const void *)ap_recent_rfc822_date;

/*
 * include/util_xml.h
 */
const void *ap_hack_ap_xml_parse_input = (const void *)ap_xml_parse_input;

/*
 * modules/http/mod_core.h
 */
const void *ap_hack_ap_basic_http_header = (const void *)ap_basic_http_header;
const void *ap_hack_ap_send_http_trace = (const void *)ap_send_http_trace;
const void *ap_hack_ap_send_http_options = (const void *)ap_send_http_options;

/*
 * os/unix/unixd.h
 */
const void *ap_hack_ap_hook_get_suexec_identity = (const void *)ap_hook_get_suexec_identity;
const void *ap_hack_ap_hook_get_get_suexec_identity = (const void *)ap_hook_get_get_suexec_identity;
const void *ap_hack_ap_run_get_suexec_identity = (const void *)ap_run_get_suexec_identity;
const void *ap_hack_unixd_setup_child = (const void *)unixd_setup_child;
const void *ap_hack_unixd_pre_config = (const void *)unixd_pre_config;
const void *ap_hack_unixd_set_user = (const void *)unixd_set_user;
const void *ap_hack_unixd_set_group = (const void *)unixd_set_group;
const void *ap_hack_unixd_set_chroot_dir = (const void *)unixd_set_chroot_dir;
#if defined(RLIMIT_CPU) || defined(RLIMIT_DATA) || defined(RLIMIT_VMEM) || defined(RLIMIT_NPROC) || defined(RLIMIT_AS)
const void *ap_hack_unixd_set_rlimit = (const void *)unixd_set_rlimit;
#endif
const void *ap_hack_unixd_set_proc_mutex_perms = (const void *)unixd_set_proc_mutex_perms;
const void *ap_hack_unixd_set_global_mutex_perms = (const void *)unixd_set_global_mutex_perms;
const void *ap_hack_unixd_accept = (const void *)unixd_accept;

