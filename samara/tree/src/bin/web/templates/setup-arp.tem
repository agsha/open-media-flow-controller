<?
#
#
#
#
?>

<INCLUDE "tms-layout">

<TMS-PAGE "ARP">
<TMS-MENU "setup">
<TMS-BODY>
<TMS-SIDEBAR><TMS-SETUP-MENU "arp"></TMS-SETUP-MENU></TMS-SIDEBAR>
<TMS-PAGE-CONTENT "Address Resolution">

<!-- ==================================================
     = Figure out what all the ARP entries are
     ================================================== -->

<?
  global net_acl
?>

<IF {[tms::check-authorization "query_basic" $net_acl {query}]}>

<?
  set cur_line 0
  set dyn_entries ""
  set cfg_entries ""
  set dyn_entry_prefix "/net/arp/state/ipv4"
  set cfg_entry_prefix "/net/arp/config/ipv4"

  proc get_entries {entry_prefix} {
    set entries ""
    set entry_ids [tms::iterate-config $entry_prefix]
    foreach entry_id $entry_ids {
      set macaddr [tms::get-config "$entry_id/macaddr"]
      set intf [tms::get-config "$entry_id/interface"]
      regexp (/*)/(.*)/(.*)/(.*)/(.*) $entry_id ematch j1 j2 j3 j4 ipaddr
      set entries "$entries $ipaddr/$macaddr/$intf"
    }
    return $entries
  }

  set dyn_entries [get_entries $dyn_entry_prefix]
  set cfg_entries [get_entries $cfg_entry_prefix]
  set entries ""

  foreach dyn_entry $dyn_entries {
      set found 0
      foreach cfg_entry $cfg_entries {
          regexp (.*)/(.*)/(.*) $dyn_entry ematch dyn_ipaddr dyn_macaddr intf
          regexp (.*)/(.*)/(.*) $cfg_entry ematch cfg_ipaddr cfg_macaddr intf
          if {[string compare $cfg_ipaddr $dyn_ipaddr] == 0 &&
              [string compare $cfg_macaddr $dyn_macaddr] == 0} {
              set found 1
              break
          }
      }

      if {$found == 0} {
          set entries "$entries $dyn_entry/yes/no"
      } else {
          set entries "$entries $dyn_entry/yes/yes"
      }
  }

  foreach cfg_entry $cfg_entries {
      set found 0
      foreach dyn_entry $dyn_entries {
          regexp (.*)/(.*)/(.*) $dyn_entry ematch dyn_ipaddr dyn_macaddr intf
          regexp (.*)/(.*)/(.*) $cfg_entry ematch cfg_ipaddr cfg_macaddr intf
          if {[string compare $cfg_ipaddr $dyn_ipaddr] == 0 &&
              [string compare $cfg_macaddr $dyn_macaddr] == 0} {
              set found 1
              break
          }
      }

      if {$found == 0} {
          set entries "$entries $cfg_entry/no/yes"
      }
  }

?>

<!-- ==================================================
     = Display the ARP table
     ================================================== -->

<h2>Static and Dynamic ARP Entries</h2>

<CFG-FORM -action "config-form-list" -div_id "arp_1">

  <table border="0" cellpadding="3" cellspacing="0" class="listing">
    <tr class="listing_head">
      <td>
      <td width="8">
      <td>
        IP address
      <td width="20">
      <td>
        MAC address
      <td width="20">
      <td>
        Interface
      <td width="20">
      <td>
        Active
      <td width="20">
      <td>
        Static
      <td width="20">
    </tr>

    <SET button_disable "true">

    <FOREACH entry $entries>
    <?
    set rdest_display ""
    regexp (.*)/(.*)/(.*)/(.*)/(.*) $entry ematch ipaddr macaddr intf active static
    ?>

    <tr class="<? if {[expr {$cur_line % 2}] == 0} {
        tms::puts "listing_even"
    } else {
        tms::puts "listing_odd"
    }?>">
      <td>
        <IF {$static == "yes"}>
          <CFG-CHECKBOX -id "row_$cur_line" -caps "set_restricted"
                        -acl $net_acl -acl_oper {set}
                        -value "/net/arp/config/ipv4/$ipaddr"
                        -span_id "arp_cbox_1">
          <SET button_disable "false">
        </IF>
      <td>
      <td>
        <?^=$ipaddr?>
      <td>
      <td>
        <?^=$macaddr?>
      <td>
      <td>
        <?^=$intf?>
      <td>
      <td>
        <?^=$active?>
      <td>
      <td>
        <?^=$static?>
      <td>
    </tr>

    <?
    incr cur_line
    ?>
    </FOREACH>

    <IF {$cur_line == 0}>
      <tr>
        <td colspan="5">
          <p class="nodata">
            No entries.
          </p>
        </td>
      </tr>
    </IF>
    <TMS-TABLE-SPACE>
  </table>

<CFG-BUTTON -type "remove" -text "Remove Selected" -caps "set_restricted" 
            -acl $net_acl -acl_oper {set} -disabled $button_disable
            -span_id "arp_remove_1">

</CFG-FORM>


<!-- ==================================================
     = Adding a new entry
     ================================================== -->

<h2>Add Static Entry</h2>

<CFG-FORM -action "config-form-list" -div_id "arp_2">

  <TMS-TABLE -div_id "arp_table_1">
    <TMS-TABLE-ENTRY "IP address">
      <CFG-IPV4 -id "ipaddr" -errname "IP address" -caps "set_restricted"
                -acl $net_acl -acl_oper {set}
                -type "ipv4addr" -span_id "arp_ipaddr">
    </TMS-TABLE-ENTRY>

    <TMS-TABLE-ENTRY "MAC address">
      <CFG-IPV4 -id "macaddr" -errname "MAC address" -caps "set_restricted"
                -acl $net_acl -acl_oper {set}
                -type "macaddr802" -span_id "arp_macaddr">
    </TMS-TABLE-ENTRY>
    <TMS-TABLE-SPACE>
  </TMS-TABLE>

  <input type="hidden" name="f_list_root" value="/net/arp/config/ipv4">
  <input type="hidden" name="f_list_index" value="ipaddr">
  <input type="hidden" name="f_list_children" value="macaddr">

 <CFG-BUTTON -type "add" -text "Add Entry" -caps "set_restricted"
             -acl $net_acl -acl_oper {set}
             -span_id "arp_add_1">

</CFG-FORM>

<h2>Clear Dynamic ARP Cache</h2>

<table border="0" cellspacing="0" cellpadding="10">
  <tr>
    <td align="right">
      <CFG-FORM -action "clear-arp" -div_id "arp_3">
        <CFG-BUTTON -type "ok" -text "Clear" -caps "action_privileged"
                    -acl $net_acl -acl_oper {action}
                    -span_id "arp_ok_1">
      </CFG-FORM>
    <td>
      Clear the Dynamic ARP cache.
</table>

<br>

<ELSE>

<br>
Insufficient authorization to view ARP configuration.

</IF>

</TMS-PAGE-CONTENT>
</TMS-BODY>
</TMS-PAGE>
