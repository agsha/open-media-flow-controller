/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 13834 $ of $
 *
 * $Id:$
 */
#ifndef JMFCNAMESPACERTSPCLIENTTABLE_H
#define JMFCNAMESPACERTSPCLIENTTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @defgroup misc misc: Miscelaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(JUNIPER-MFC-MIB)
config_require(JUNIPER-MFC-MIB/jmfcNamespaceRtspClientTable/jmfcNamespaceRtspClientTable_interface)
config_require(JUNIPER-MFC-MIB/jmfcNamespaceRtspClientTable/jmfcNamespaceRtspClientTable_data_access)
config_require(JUNIPER-MFC-MIB/jmfcNamespaceRtspClientTable/jmfcNamespaceRtspClientTable_data_get)
config_require(JUNIPER-MFC-MIB/jmfcNamespaceRtspClientTable/jmfcNamespaceRtspClientTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for jmfcNamespaceRtspClientTable 
     */
#include "jmfcNamespaceRtspClientTable_oids.h"

    /*
     * enum definions 
     */
#include "jmfcNamespaceRtspClientTable_enums.h"

    /*
     *********************************************************************
 * function declarations
 */
void init_jmfcNamespaceRtspClientTable(void);
void shutdown_jmfcNamespaceRtspClientTable(void);

    /*
     *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table jmfcNamespaceRtspClientTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * JUNIPER-MFC-MIB::jmfcNamespaceRtspClientTable is subid 4 of jmfcNamespace.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.2636.1.2.1.4.4, length: 12
*/
    /*
     *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review jmfcNamespaceRtspClientTable registration context.
     */
typedef netsnmp_data_list jmfcNamespaceRtspClientTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review jmfcNamespaceRtspClientTable data context structure.
 * This structure is used to represent the data for jmfcNamespaceRtspClientTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * jmfcNamespaceRtspClientTable.
 */
typedef struct jmfcNamespaceRtspClientTable_data_s {
    
        /*
         * jmfcNamespaceRtspClientRequests(1)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientRequests;
    
        /*
         * jmfcNamespaceRtspClientResponses(2)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientResponses;
    
        /*
         * jmfcNamespaceRtspClientCacheHit(3)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientCacheHit;
    
        /*
         * jmfcNamespaceRtspClientCacheMiss(4)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientCacheMiss;
    
        /*
         * jmfcNamespaceRtspClientCachePartialHit(5)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientCachePartialHit;
    
        /*
         * jmfcNamespaceRtspClientInBytes(6)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientInBytes;
    
        /*
         * jmfcNamespaceRtspClientOutBytes(7)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientOutBytes;
    
        /*
         * jmfcNamespaceRtspClientConns(8)/GAUGE/ASN_GAUGE/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   jmfcNamespaceRtspClientConns;
    
        /*
         * jmfcNamespaceRtspClientActiveConns(9)/GAUGE/ASN_GAUGE/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   jmfcNamespaceRtspClientActiveConns;
    
        /*
         * jmfcNamespaceRtspClientIdleConns(10)/GAUGE/ASN_GAUGE/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   jmfcNamespaceRtspClientIdleConns;
    
        /*
         * jmfcNamespaceRtspClientStatus2xx(11)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientStatus2xx;
    
        /*
         * jmfcNamespaceRtspClientStatus3xx(12)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientStatus3xx;
    
        /*
         * jmfcNamespaceRtspClientStatus4xx(13)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientStatus4xx;
    
        /*
         * jmfcNamespaceRtspClientStatus5xx(14)/COUNTER64/ASN_COUNTER64/U64(U64)//l/A/w/e/r/d/h
         */
   U64   jmfcNamespaceRtspClientStatus5xx;
    
} jmfcNamespaceRtspClientTable_data;


/*
 * TODO:120:r: |-> Review jmfcNamespaceRtspClientTable mib index.
 * This structure is used to represent the index for jmfcNamespaceRtspClientTable.
 */
typedef struct jmfcNamespaceRtspClientTable_mib_index_s {

        /*
         * jmfcNamespaceName(2)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/h
         */
   char   jmfcNamespaceName[32];
   size_t      jmfcNamespaceName_len;


} jmfcNamespaceRtspClientTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review jmfcNamespaceRtspClientTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     *
     * BE VERY CAREFUL TO TAKE INTO ACCOUNT THE MAXIMUM
     * POSSIBLE LENGHT FOR EVERY VARIABLE LENGTH INDEX!
     * Guessing 128 - col/entry(2)  - oid len(12)
*/
#define MAX_jmfcNamespaceRtspClientTable_IDX_LEN     33


    /*
     *********************************************************************
 * TODO:130:o: |-> Review jmfcNamespaceRtspClientTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * jmfcNamespaceRtspClientTable_rowreq_ctx pointer.
 */
typedef struct jmfcNamespaceRtspClientTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_jmfcNamespaceRtspClientTable_IDX_LEN];
    
    jmfcNamespaceRtspClientTable_mib_index        tbl_idx;
    
    jmfcNamespaceRtspClientTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to jmfcNamespaceRtspClientTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *jmfcNamespaceRtspClientTable_data_list;

} jmfcNamespaceRtspClientTable_rowreq_ctx;

typedef struct jmfcNamespaceRtspClientTable_ref_rowreq_ctx_s {
    jmfcNamespaceRtspClientTable_rowreq_ctx *rowreq_ctx;
} jmfcNamespaceRtspClientTable_ref_rowreq_ctx;

    /*
     *********************************************************************
 * function prototypes
 */
    int            
        jmfcNamespaceRtspClientTable_pre_request
        (jmfcNamespaceRtspClientTable_registration * user_context);
    int            
        jmfcNamespaceRtspClientTable_post_request
        (jmfcNamespaceRtspClientTable_registration * user_context, int rc);


    jmfcNamespaceRtspClientTable_rowreq_ctx
        *jmfcNamespaceRtspClientTable_row_find_by_mib_index
        (jmfcNamespaceRtspClientTable_mib_index * mib_idx);

extern oid jmfcNamespaceRtspClientTable_oid[];
extern int jmfcNamespaceRtspClientTable_oid_size;


#include "jmfcNamespaceRtspClientTable_interface.h"
#include "jmfcNamespaceRtspClientTable_data_access.h"
#include "jmfcNamespaceRtspClientTable_data_get.h"
#include "jmfcNamespaceRtspClientTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif
#endif /* JMFCNAMESPACERTSPCLIENTTABLE_H */
